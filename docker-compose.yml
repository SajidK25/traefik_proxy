---
version: "3.7"
services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=sajidk25@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

    restart: always
    networks:
      - traefik-net
    ports:
    - "80:80"
    - "443:443"
    - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN_NAME}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.service=api@internal
      # Middlewares
      - traefik.http.routers.dashboard.middlewares=dashboard_auth
      ## Creates 2 authentication middlewares
      ### `dashboard_auth` is a BasicAuth middleware and is going to be used by the `dashboard` router.
      ### dashboard:tutorial
      - traefik.http.middlewares.dashboard_auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}
      ### `auth` is a DigestAuth middleware and is going to be used by the `whoami_route` router.
      ### whoami:tutorial
      # - traefik.http.middlewares.digest_auth.digestauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}
networks:
  traefik-net:
    external: true 